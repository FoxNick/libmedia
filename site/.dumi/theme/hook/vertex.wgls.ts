export default 'struct PositionColorInput {\n    @location(0) in_position_3d: vec3<f32>,\n    @location(1) in_color_rgba: vec4<f32>\n};\n\nstruct PositionColorOutput {\n    @builtin(position) coords_output: vec4<f32>,\n    @location(0) color_output: vec4<f32>\n};\n\nstruct RotateMatrix {\n    matrix: mat4x4<f32>\n};\n\n@group(0) @binding(0) var<uniform> rotateMatrix: RotateMatrix;\n\n@vertex\nfn main(input: PositionColorInput) -> PositionColorOutput {\n    var output: PositionColorOutput;\n    output.color_output = input.in_color_rgba;\n    output.coords_output = rotateMatrix.matrix * vec4<f32>(input.in_position_3d, 1.0);\n    return output;\n}\n'